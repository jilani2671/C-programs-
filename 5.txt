Write a program that implements the following sorting
a. Bubble Sort
b. Selection Sort
c. Insertion Sort


#include <stdio.h>
// A function to swap two elements
void swap(int *a, int *b)
{
int temp = *a;
*a = *b;
*b = temp;
}
// A function to implement bubble sort
void bubbleSort(int arr[], int n)
{
for (int i = 0; i < n - 1; i++)
for (int j = 0; j < n - i - 1; j++)
if (arr[j] > arr[j + 1])
swap(&arr[j], &arr[j + 1]);
}
// A function to implement selection sort
void selectionSort(int arr[], int n)
{
for (int i = 0; i < n - 1; i++)
{
// Find the minimum element in unsorted array
int min_idx = i;
for (int j = i + 1; j < n; j++)
if (arr[j] < arr[min_idx])
min_idx = j;
// Swap the found minimum element with the first element
swap(&arr[min_idx], &arr[i]);
}
}
// A function to implement insertion sort
void insertionSort(int arr[], int n)
{
for (int i = 1; i < n; i++)
{
int key = arr[i]; // The element to be inserted
int j = i - 1; // The index of the previous element
// Move elements of arr[0..i-1], that are greater than key, to one position

while (j >= 0 && arr[j] > key)
{
arr[j + 1] = arr[j];
j = j - 1;
}
arr[j + 1] = key; // Insert the key at the correct position
}
}
// A function to print an array of size n
void printArray(int arr[], int n)
{
for (int i = 0; i < n; i++)
printf("%d ", arr[i]);
printf("\n");
}
int main()
{
int arr[] = {10, 66, 88, 66, 544};
int n = sizeof(arr) / sizeof(arr[0]);
printf("Original array: \n");
printArray(arr, n);
bubbleSort(arr, n);
printf("Sorted array using bubble sort: \n");
printArray(arr, n);
selectionSort(arr, n);
printf("Sorted array using selection sort: \n");
printArray(arr, n);
insertionSort(arr, n);
printf("Sorted array using insertion sort: \n");
printArray(arr, n);
return 0;
} 